{
  "hash": "b824c87d405384408f7e1171fd2b07d1",
  "result": {
    "markdown": "\n\n\n# Q2a\n\n::: {.cell}\n\n```{.r .cell-code}\nNFL2022_stuffs <- read_csv('https://bcdanl.github.io/data/NFL2022_stuffs.csv')\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 50147 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): game_id, posteam\ndbl (8): play_id, drive, week, qtr, down, half_seconds_remaining, pass, wp\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\n NFL2022_stuffs <- NFL2022_stuffs[complete.cases(NFL2022_stuffs$posteam), ]\n```\n:::\n\n# Q2b\n\n::: {.cell}\n\n```{.r .cell-code}\n filtered_data <- NFL2022_stuffs %>%\n  filter(wp > 0.2 & wp < 0.75, down <= 2, half_seconds_remaining > 120)\n\n summary_pass <- filtered_data %>%\n  group_by(posteam) %>%\n  summarize(mean_pass = mean(pass, na.rm = TRUE))\n```\n:::\n\n\n\n# Q2c\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\n# Reordering posteam based on mean value of pass\n summary_pass$posteam <- factor(summary_pass$posteam, levels =  summary_pass$posteam[order(summary_pass$mean_pass)])\n\n# Plotting\n ggplot(summary_pass, aes(x = mean_pass, y = posteam)) +\n  geom_point() +\n  labs(title = \"Mean Value of Pass for Each posteam\",\n       x = \"Percentage of pass plays\",\n       y = \"Team with possession\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](nflhw_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n# Q2d\n\n::: {.cell}\n\n```{.r .cell-code}\nNFL2022_epa <- read_csv('https://bcdanl.github.io/data/NFL2022_epa.csv')\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 46427 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): game_id, posteam, receiver, passer\ndbl (3): play_id, drive, epa\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nNFL2022_stuffs_EPA <- NFL2022_stuffs %>%\n  left_join(NFL2022_epa %>% select(play_id, passer, receiver, epa), by = \"play_id\") %>%\n  filter(!is.na(passer))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in left_join(., NFL2022_epa %>% select(play_id, passer, receiver, : Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 1 of `x` matches multiple rows in `y`.\nℹ Row 24 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n```\n:::\n:::\n\n# Q2e\n\n::: {.cell}\n\n```{.r .cell-code}\nweekly_trend <- NFL2022_stuffs_EPA %>%\n  filter(passer %in% c(\"J.Allen\", \"P.Mahomes\")) %>%\n group_by(week, passer) %>%\n  summarize(mean_epa = mean(epa, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'week'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\n# Plotting\nggplot(weekly_trend, aes(x = week, y = mean_epa, color = passer)) +\n  geom_line() +\n  labs(title = \"NFL Weekly Trend of Mean EPA\",\n       x = \"Week\",\n       y = \"Mean EPA\") +\n theme_minimal()\n```\n\n::: {.cell-output-display}\n![](nflhw_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n# Q2f\n\n::: {.cell}\n\n```{.r .cell-code}\nmean_epa_diff <- weekly_trend %>%\n  spread(passer, mean_epa) %>%\n  mutate(diff_J_Allen_P_Mahomes = `J.Allen` - `P.Mahomes`)\n```\n:::\n\n\n# Q2g\n\n\n::: {.cell}\n\n```{.r .cell-code}\npasser_summary <- NFL2022_stuffs_EPA %>%\n  group_by(posteam, passer) %>%\n  summarize(mean_epa = mean(epa, na.rm = TRUE),\n            n_pass = n()) %>%\n  filter(n_pass >= quantile(n_pass, 0.75))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'posteam'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\ntop_10_passers <- passer_summary %>%\n  group_by(passer) %>%\n  summarize(mean_epa = mean(mean_epa, na.rm = TRUE)) %>%\n  top_n(10, wt = mean_epa)\n```\n:::\n",
    "supporting": [
      "nflhw_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}