{
  "hash": "4daa0f2699f5c3f3fc85e7bbd99050e2",
  "result": {
    "markdown": "---\ntitle: \"NYC Restaurants\"\nauthor: \"Sophia Rodger\"\ndate: \"2023-10-30\"\nimage: \"nyc.png\"\n\nexecute:\n  message: false\n  warning: false\n  \ntoc: true\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(skimr)\nrestaurant <- read_csv(\n  'https://bcdanl.github.io/data/DOHMH_NYC_Restaurant_Inspection.csv'\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary_stats <- restaurant %>%\n  group_by(GRADE) %>%\n  summarize(\n    Mean = mean(SCORE),\n    StdDev = sd(SCORE),\n    Q1 = quantile(SCORE, 0.25),\n    Median = median(SCORE),\n    Q3 = quantile(SCORE, 0.75),\n    Max = max(SCORE)\n  )\n\nprint(summary_stats)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 Ã— 7\n  GRADE  Mean StdDev    Q1 Median    Q3   Max\n  <chr> <dbl>  <dbl> <dbl>  <dbl> <dbl> <dbl>\n1 A      9.26   3.42     7     10    12    13\n2 B     21.0    4.16    18     21    24    36\n3 C     38.6   10.8     31     36    44    86\n```\n:::\n\n```{.r .cell-code}\n# The code calculates the mean, standard deviation, quartiles, and maximum \n# of SCORE for each GRADE of restaurants.\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngrade_a_count <- nrow(restaurant[restaurant$GRADE == \"A\", ])\n\ntotal_restaurants <- nrow(restaurant)\n\ngrade_c_percentage <- (nrow(restaurant[restaurant$GRADE == \"C\", ]) / total_restaurants) * 100\n\ncat(\"Number of restaurants with GRADE A:\", grade_a_count, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nNumber of restaurants with GRADE A: 16305 \n```\n:::\n\n```{.r .cell-code}\ncat(\"Percentage of restaurants with GRADE C:\", grade_c_percentage, \"%\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nPercentage of restaurants with GRADE C: 1.667328 %\n```\n:::\n\n```{.r .cell-code}\n# It counts the number of restaurants with GRADE A and calculates the \n# percentage of restaurants with GRADE C. Number of restaurants with \n# GRADE A is 16305 and the percentage of restaurants with \n# GRADE C is 1.667328 %\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nggplot(restaurant, aes(x = GRADE, y = SCORE, fill = `CRITICAL FLAG`)) +\n  geom_boxplot() +\n  labs(title = \"Distribution of SCORE by GRADE and CRITICAL FLAG\")\n```\n\n::: {.cell-output-display}\n![](nycHW_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# The code creates a box plot to show how the distribution of SCORE varies \n# by GRADE and CRITICAL FLAG. The box plot shows that GRADE C has the\n# highest score and a wider spread of CRITICAL FLAG, whereas GRADE A has\n# the lowest score and a smaller spread of CRITICAL FLAG.\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(restaurant, aes(x = BORO, fill = `CRITICAL FLAG`)) +\n  geom_bar(position = \"fill\") +\n  facet_wrap(~GRADE) +\n  labs(title = \"Proportion of CRITICAL FLAG by GRADE and BORO\")\n```\n\n::: {.cell-output-display}\n![](nycHW_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# The code creates a bar plot to display how the proportion of CRITICAL FLAG \n# varies by GRADE and BORO. The bar plot shows that the BORO's classified as \n# GRADE A have the lowest critical count, whereas GRADE B and C have a higher\n# critical count. The Bronx has the most critical count in GRADE C, while \n# Staten Island has the least critical count in GRADE A.\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntop_cuisines <- restaurant %>%\n  count(`CUISINE DESCRIPTION`) %>%\n  arrange(desc(n)) %>%\n  head(10) %>%\n  pull(`CUISINE DESCRIPTION`)\n\ntop_cuisine_grade_a <- restaurant %>%\n  filter(`CUISINE DESCRIPTION` %in% top_cuisines) %>%\n  group_by(`CUISINE DESCRIPTION`, GRADE) %>%\n  summarise(count = n()) %>%\n  filter(GRADE == \"A\") %>%\n  arrange(desc(count)) %>%\n  slice(1)\n\n# The code finds the CUISINE DESCRIPTION with the highest proportion of \n# GRADE A among the 10 most common cuisine descriptions. The highest CUISINE \n# DESCRIPTION that has the highest proportion of GRADE A is American.\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncommon_dbas <- restaurant %>%\n  group_by(BORO, DBA) %>%\n  summarize(count = n()) %>%\n  arrange(BORO, desc(count)) %>%\n  group_by(BORO) %>%\n  top_n(3)\n\nmost_common_dba <- common_dbas %>%\n  group_by(DBA) %>%\n  summarize(count = sum(count)) %>%\n  arrange(desc(count)) %>%\n  head(1)\n\n# The code finds the three most common restaurant names (DBA) in each \n# borough and identifies the most common DBA value overall in NYC. \n# Overall, the most common DBA value in NYC is starbucks.\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncritical_dba <- restaurant %>%\n  filter(DBA %in% common_dbas$DBA) %>%\n  group_by(DBA, `CRITICAL FLAG`) %>%\n  summarize(count = n()) %>%\n  filter(`CRITICAL FLAG` == \"Critical\") %>%\n  arrange(desc(count)) %>%\n  head(1)\n\n# This code determines the DBA value most likely to commit critical violations \n# among the common DBA's identified in Q1f. The DBA value that is most likely\n# to commit critical violation is dunkin.\n```\n:::\n",
    "supporting": [
      "nycHW_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}