{
  "hash": "017ca3e51790a3b577da91fe07b6c553",
  "result": {
    "markdown": "---\ntitle: \"Spotify Artists\"\nauthor: \"Sophia Rodger\"\ndate: \"2023-10-30\"\nimage: \"spotify.png\"\n\nexecute:\n  message: false\n  warning: false\n  \ntoc: true\n---\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(skimr)\nspotify_all <- read_csv('https://bcdanl.github.io/data/spotify_all.csv')\n# The data.frame `spotify_all` includes information about Spotify users' playlists\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Answer for Q1a\ntop_songs <- spotify_all %>%\n  group_by(artist_name, track_name) %>%\n  summarize(popularity = n()) %>%\n  arrange(desc(popularity)) %>%\n  head(10)\ntop_songs\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 3\n# Groups:   artist_name [10]\n   artist_name      track_name                          popularity\n   <chr>            <chr>                                    <int>\n 1 Drake            One Dance                                  143\n 2 Kendrick Lamar   HUMBLE.                                    142\n 3 The Chainsmokers Closer                                     129\n 4 DRAM             Broccoli (feat. Lil Yachty)                127\n 5 Post Malone      Congratulations                            119\n 6 Migos            Bad and Boujee (feat. Lil Uzi Vert)        117\n 7 KYLE             iSpy (feat. Lil Yachty)                    115\n 8 Lil Uzi Vert     XO TOUR Llif3                              113\n 9 Aminé            Caroline                                   107\n10 Khalid           Location                                   102\n```\n:::\n\n```{.r .cell-code}\n# This code finds the ten most popular songs and their artists, with the artists\n# being, Drake, Kendrick Lamar, The Chainsmokers, DRAM, Post Malone, Migos, KYLE, \n# Lil Uzi Vert, Amine, Khalid respectively.\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntop_artists <- spotify_all %>%\n  group_by(artist_name) %>%\n  summarize(popularity = n()) %>%\n  arrange(desc(popularity)) %>%\n  head(5)\ntop_artists\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 2\n  artist_name    popularity\n  <chr>               <int>\n1 Drake                2715\n2 Kanye West           1065\n3 Kendrick Lamar       1035\n4 Rihanna               915\n5 The Weeknd            913\n```\n:::\n\n```{.r .cell-code}\n# This code finds the five most popular artists which are Drake, Kanye West, \n# Kendrick Lamar, Rihanna, and The Weekend.\n\nmost_popular_songs <- spotify_all %>%\n  filter(artist_name %in% top_artists$artist_name) %>%\n  group_by(artist_name, track_name) %>%\n  summarize(popularity = n()) %>%\n  arrange(artist_name, desc(popularity)) %>%\n  group_by(artist_name) %>%\n  slice(1)\nmost_popular_songs\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 3\n# Groups:   artist_name [5]\n  artist_name    track_name  popularity\n  <chr>          <chr>            <int>\n1 Drake          One Dance          143\n2 Kanye West     Gold Digger         83\n3 Kendrick Lamar HUMBLE.            142\n4 Rihanna        Needed Me           79\n5 The Weeknd     Starboy            100\n```\n:::\n\n```{.r .cell-code}\n# This finds the most popular song for each of the five most popular artists\n# which is One Dance, Gold Digger, HUMBLE., Needed Me, and Starboy respectively.\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(top_songs, aes(x = artist_name, y = popularity, fill = artist_name)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Popularity of the Ten Most Popular Artists\",\n       x = \"Artist Name\", y = \"Popularity\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](spotifyhw_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# This code create a ggplot to visualize the relationship between 'pos' and the ten \n# most popular artists, showing that Drake has the highest popularity, while Khalid\n# has the lowest popularity. The bar chart shows that all of the artists have a \n# popularity above 100.\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# -   `pid`: playlist id\n# -   `playlist_name`: name of playlist\n# -   `artist`: name of the track's primary artist, which appears only once within a playlist\n# -   `n_artist`: number of occurrences of artist within a playlist\n\n# Answer for Q1d\n\npid_artist_df <- spotify_all %>% \n  group_by(pid, playlist_name, artist_name) %>% \n  summarise(n_artist = n_distinct(artist_name))\n\n# This creates a data frame with pid-artist level of observations\n```\n:::\n\n\n# Q1e\n\n::: {.cell}\n\n```{.r .cell-code}\ntop10_artists <- spotify_all %>%\n  group_by(artist_name) %>%\n  summarise(total_duration = sum(duration_ms)) %>%\n  top_n(10, total_duration)\n\nggplot(top10_artists, aes(x = reorder(artist_name, total_duration), y = total_duration)) +\n  geom_point(stat = \"identity\", fill = \"green\") +\n  labs(title = \"Top 10 Artists by Total Duration\",\n       x = \"Artist Name\",\n       y = \"Total Duration (ms)\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))\n```\n\n::: {.cell-output-display}\n![](spotifyhw_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n# Q1f\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop_20_albums <- spotify_all %>%\n  count(album_name, sort = TRUE) %>%\n  head(20)\n\nggplot(top_20_albums, aes(x = reorder(album_name, n), y = n)) +\n  geom_bar(stat = \"identity\", fill = \"skyblue\") +\n  labs(title = \"Top 20 Albums by Count\",\n       x = \"Album Name\",\n       y = \"Count\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](spotifyhw_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# This bar plot shows the top 20 albums based on\n# the count of tracks in the dataset. The x-axis \n# represents the album names, and the y-axis \n# represents the count of tracks from each album.\n```\n:::\n",
    "supporting": [
      "spotifyhw_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}