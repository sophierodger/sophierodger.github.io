[
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "DANL Project",
    "section": "",
    "text": "Welcome to the exploration of alcohol content trends in popular beer brands! In this project, we delve into a dataset containing information on different beer brands. Our focus is on understanding the variation in alcohol content among these brands, providing insights into the diverse world of beers. üçª üëè"
  },
  {
    "objectID": "project.html#summary-statistics",
    "href": "project.html#summary-statistics",
    "title": "DANL Project",
    "section": "2.1 Summary Statistics",
    "text": "2.1 Summary Statistics\n\nbeer_data &lt;- read_csv('https://bcdanl.github.io/data/beer_markets.csv') \n\n\nskim(beer_data) %&gt;% \n  select(-n_missing)\n\n\nData summary\n\n\nName\nbeer_data\n\n\nNumber of rows\n73115\n\n\nNumber of columns\n24\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n13\n\n\nlogical\n6\n\n\nnumeric\n5\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\nskim_variable\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\n_purchase_desc\n1\n12\n29\n0\n115\n0\n\n\nbrand\n1\n9\n13\n0\n5\n0\n\n\ncontainer\n1\n3\n30\n0\n7\n0\n\n\nmarket\n1\n5\n20\n0\n92\n0\n\n\nbuyertype\n1\n4\n7\n0\n3\n0\n\n\nincome\n1\n5\n8\n0\n5\n0\n\n\nage\n1\n3\n5\n0\n4\n0\n\n\nemployment\n1\n4\n4\n0\n3\n0\n\n\ndegree\n1\n2\n7\n0\n4\n0\n\n\ncow\n1\n4\n25\n0\n4\n0\n\n\nrace\n1\n5\n8\n0\n5\n0\n\n\ntvcable\n1\n4\n7\n0\n3\n0\n\n\nnpeople\n1\n1\n5\n0\n5\n0\n\n\n\nVariable type: logical\n\n\n\nskim_variable\ncomplete_rate\nmean\ncount\n\n\n\n\npromo\n1\n0.20\nFAL: 58563, TRU: 14552\n\n\nchildrenUnder6\n1\n0.07\nFAL: 68109, TRU: 5006\n\n\nchildren6to17\n1\n0.20\nFAL: 58155, TRU: 14960\n\n\nmicrowave\n1\n0.99\nTRU: 72676, FAL: 439\n\n\ndishwasher\n1\n0.73\nTRU: 53258, FAL: 19857\n\n\nsinglefamilyhome\n1\n0.81\nTRU: 59058, FAL: 14057\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nhh\n1\n17407721.61\n11582147.34\n2000235.00\n8223438.00\n8413624.00\n30171315.00\n30440718.00\n‚ñÇ‚ñá‚ñÅ‚ñÅ‚ñá\n\n\nquantity\n1\n1.32\n1.15\n1.00\n1.00\n1.00\n1.00\n48.00\n‚ñá‚ñÅ‚ñÅ‚ñÅ‚ñÅ\n\n\ndollar_spent\n1\n13.78\n8.72\n0.51\n8.97\n12.99\n16.38\n159.13\n‚ñá‚ñÅ‚ñÅ‚ñÅ‚ñÅ\n\n\nbeer_floz\n1\n265.93\n199.52\n12.00\n144.00\n216.00\n360.00\n9216.00\n‚ñá‚ñÅ‚ñÅ‚ñÅ‚ñÅ\n\n\nprice_per_floz\n1\n0.06\n0.01\n0.00\n0.05\n0.06\n0.06\n0.23\n‚ñÉ‚ñá‚ñÅ‚ñÅ‚ñÅ"
  },
  {
    "objectID": "project.html#alcohol-content-in-beer-brands",
    "href": "project.html#alcohol-content-in-beer-brands",
    "title": "DANL Project",
    "section": "2.2 Alcohol Content in Beer Brands",
    "text": "2.2 Alcohol Content in Beer Brands\nWe aim to analyze the alcohol content of different beer brands. Let‚Äôs visualize this with an insightful boxplot. üìä üç∫"
  },
  {
    "objectID": "blog-listing.html",
    "href": "blog-listing.html",
    "title": "Informative Analytical Solutions",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n1 min\n\n\n\n\n\n\n  \n\n\n\n\nSpotify Artists\n\n\n\n\n\n\n\n\n\nOct 30, 2023\n\n\nSophia Rodger\n\n\n4 min\n\n\n\n\n\n\n  \n\n\n\n\nNYC Restaurants\n\n\n\n\n\n\n\n\n\nOct 30, 2023\n\n\nSophia Rodger\n\n\n3 min\n\n\n\n\n\n\n  \n\n\n\n\nNFL in 2022\n\n\n\n\n\n\n\n\n\nOct 30, 2023\n\n\nSophia Rodger\n\n\n3 min\n\n\n\n\n\n\n  \n\n\n\n\nBeer Markets\n\n\n\n\n\n\n\n\n\nOct 30, 2023\n\n\nSophia Rodger\n\n\n4 min\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog :purple_heart: :sunny:\n\n\n\n\n\n\n\n\n\nOct 27, 2023\n\n\nSophia Rodger\n\n\n1 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/nfl/nflhw.html",
    "href": "posts/nfl/nflhw.html",
    "title": "NFL in 2022",
    "section": "",
    "text": "#Q2a\nNFL2022_stuffs &lt;- read_csv('https://bcdanl.github.io/data/NFL2022_stuffs.csv')\n NFL2022_stuffs &lt;- NFL2022_stuffs[complete.cases(NFL2022_stuffs$posteam), ]\n\n\n#Q2b\n filtered_data &lt;- NFL2022_stuffs %&gt;%\n  filter(wp &gt; 0.2 & wp &lt; 0.75, down &lt;= 2, half_seconds_remaining &gt; 120)\n\n summary_pass &lt;- filtered_data %&gt;%\n  group_by(posteam) %&gt;%\n  summarize(mean_pass = mean(pass, na.rm = TRUE))\n\n\n#Q2c\nlibrary(ggplot2)\n\n# Reordering posteam based on mean value of pass\n summary_pass$posteam &lt;- factor(summary_pass$posteam, levels =  summary_pass$posteam[order(summary_pass$mean_pass)])\n\n# Plotting\n ggplot(summary_pass, aes(x = mean_pass, y = posteam)) +\n  geom_point() +\n  labs(title = \"Mean Value of Pass for Each posteam\",\n       x = \"Percentage of pass plays\",\n       y = \"Team with possession\") +\n  theme_minimal()\n\n\n\n\n\n#Q2d\nNFL2022_epa &lt;- read_csv('https://bcdanl.github.io/data/NFL2022_epa.csv')\n\nNFL2022_stuffs_epa &lt;- NFL2022_stuffs %&gt;%\n  left_join(NFL2022_epa %&gt;% select(play_id, passer, receiver, epa), by = \"play_id\") %&gt;%\n  filter(!is.na(passer))\n\n\n#Q2e\nweekly_trend &lt;- NFL2022_stuffs_epa %&gt;%\n  filter(passer %in% c(\"J.Allen\", \"P.Mahomes\")) %&gt;%\n group_by(week, passer) %&gt;%\n  summarize(mean_epa = mean(epa, na.rm = TRUE))\n\n# Plotting\nggplot(weekly_trend, aes(x = week, y = mean_epa, color = passer)) +\n  geom_line() +\n  labs(title = \"NFL Weekly Trend of Mean EPA\",\n       x = \"Week\",\n       y = \"Mean EPA\") +\n theme_minimal()\n\n\n\n\n\n#Q2f\nmean_epa_diff &lt;- weekly_trend %&gt;%\n  spread(passer, mean_epa) %&gt;%\n  mutate(diff_J_Allen_P_Mahomes = `J.Allen` - `P.Mahomes`)\n\n\n#Q2g\npasser_summary &lt;- NFL2022_stuffs_epa %&gt;%\n  group_by(posteam, passer) %&gt;%\n  summarize(mean_epa = mean(epa, na.rm = TRUE),\n            n_pass = n()) %&gt;%\n  filter(n_pass &gt;= quantile(n_pass, 0.75))\n\ntop_10_passers &lt;- passer_summary %&gt;%\n  group_by(passer) %&gt;%\n  summarize(mean_epa = mean(mean_epa, na.rm = TRUE)) %&gt;%\n  top_n(10, wt = mean_epa)\n\n\n# Q2h: Visualization of Mean EPA for Top 10 Passers\nggplot(top_10_passers, aes(x = reorder(passer, mean_epa), y = mean_epa)) +\n  geom_bar(stat = \"identity\", fill = \"#FF9999\", color = \"#FF6666\", width = 0.7) +\n  labs(title = \"Mean EPA for Top 10 Passers\",\n       x = \"Quarterback\",\n       y = \"Mean EPA\") +\n  theme_ipsum() +\n  theme(axis.text.y = element_text(size = 9, hjust = 0))"
  },
  {
    "objectID": "posts/spotify/spotifyhw.html",
    "href": "posts/spotify/spotifyhw.html",
    "title": "Spotify Artists",
    "section": "",
    "text": "library(tidyverse)\nlibrary(skimr)\nspotify_all &lt;- read_csv('https://bcdanl.github.io/data/spotify_all.csv')\n# The data.frame `spotify_all` includes information about Spotify users' playlists\n\n\n# Answer for Q1a\ntop_songs &lt;- spotify_all %&gt;%\n  group_by(artist_name, track_name) %&gt;%\n  summarize(popularity = n()) %&gt;%\n  arrange(desc(popularity)) %&gt;%\n  head(10)\ntop_songs\n\n# A tibble: 10 √ó 3\n# Groups:   artist_name [10]\n   artist_name      track_name                          popularity\n   &lt;chr&gt;            &lt;chr&gt;                                    &lt;int&gt;\n 1 Drake            One Dance                                  143\n 2 Kendrick Lamar   HUMBLE.                                    142\n 3 The Chainsmokers Closer                                     129\n 4 DRAM             Broccoli (feat. Lil Yachty)                127\n 5 Post Malone      Congratulations                            119\n 6 Migos            Bad and Boujee (feat. Lil Uzi Vert)        117\n 7 KYLE             iSpy (feat. Lil Yachty)                    115\n 8 Lil Uzi Vert     XO TOUR Llif3                              113\n 9 Amin√©            Caroline                                   107\n10 Khalid           Location                                   102\n\n# This code finds the ten most popular songs and their artists, with the artists\n# being, Drake, Kendrick Lamar, The Chainsmokers, DRAM, Post Malone, Migos, KYLE, \n# Lil Uzi Vert, Amine, Khalid respectively.\n\n\ntop_artists &lt;- spotify_all %&gt;%\n  group_by(artist_name) %&gt;%\n  summarize(popularity = n()) %&gt;%\n  arrange(desc(popularity)) %&gt;%\n  head(5)\ntop_artists\n\n# A tibble: 5 √ó 2\n  artist_name    popularity\n  &lt;chr&gt;               &lt;int&gt;\n1 Drake                2715\n2 Kanye West           1065\n3 Kendrick Lamar       1035\n4 Rihanna               915\n5 The Weeknd            913\n\n# This code finds the five most popular artists which are Drake, Kanye West, \n# Kendrick Lamar, Rihanna, and The Weekend.\n\nmost_popular_songs &lt;- spotify_all %&gt;%\n  filter(artist_name %in% top_artists$artist_name) %&gt;%\n  group_by(artist_name, track_name) %&gt;%\n  summarize(popularity = n()) %&gt;%\n  arrange(artist_name, desc(popularity)) %&gt;%\n  group_by(artist_name) %&gt;%\n  slice(1)\nmost_popular_songs\n\n# A tibble: 5 √ó 3\n# Groups:   artist_name [5]\n  artist_name    track_name  popularity\n  &lt;chr&gt;          &lt;chr&gt;            &lt;int&gt;\n1 Drake          One Dance          143\n2 Kanye West     Gold Digger         83\n3 Kendrick Lamar HUMBLE.            142\n4 Rihanna        Needed Me           79\n5 The Weeknd     Starboy            100\n\n# This finds the most popular song for each of the five most popular artists\n# which is One Dance, Gold Digger, HUMBLE., Needed Me, and Starboy respectively.\n\n\nggplot(top_songs, aes(x = artist_name, y = popularity, fill = artist_name)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Popularity of the Ten Most Popular Artists\",\n       x = \"Artist Name\", y = \"Popularity\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n# This code create a ggplot to visualize the relationship between 'pos' and the ten \n# most popular artists, showing that Drake has the highest popularity, while Khalid\n# has the lowest popularity. The bar chart shows that all of the artists have a \n# popularity above 100.\n\n\n# -   `pid`: playlist id\n# -   `playlist_name`: name of playlist\n# -   `artist`: name of the track's primary artist, which appears only once within a playlist\n# -   `n_artist`: number of occurrences of artist within a playlist\n\n# Answer for Q1d\n\npid_artist_df &lt;- spotify_all %&gt;% \n  group_by(pid, playlist_name, artist_name) %&gt;% \n  summarise(n_artist = n_distinct(artist_name))\n\n# This creates a data frame with pid-artist level of observations\n\n\nQ1e\n\ntop10_artists &lt;- spotify_all %&gt;%\n  group_by(artist_name) %&gt;%\n  summarise(total_duration = sum(duration_ms)) %&gt;%\n  top_n(10, total_duration)\n\nggplot(top10_artists, aes(x = reorder(artist_name, total_duration), y = total_duration)) +\n  geom_point(stat = \"identity\", fill = \"green\") +\n  labs(title = \"Top 10 Artists by Total Duration\",\n       x = \"Artist Name\",\n       y = \"Total Duration (ms)\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))\n\n\n\n\n\n\nQ1f\n\ntop_20_albums &lt;- spotify_all %&gt;%\n  count(album_name, sort = TRUE) %&gt;%\n  head(20)\n\nggplot(top_20_albums, aes(x = reorder(album_name, n), y = n)) +\n  geom_bar(stat = \"identity\", fill = \"skyblue\") +\n  labs(title = \"Top 20 Albums by Count\",\n       x = \"Album Name\",\n       y = \"Count\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n# This bar plot shows the top 20 albums based on\n# the count of tracks in the dataset. The x-axis \n# represents the album names, and the y-axis \n# represents the count of tracks from each album."
  },
  {
    "objectID": "posts/beer markets/beermarketHW.html",
    "href": "posts/beer markets/beermarketHW.html",
    "title": "Beer Markets",
    "section": "",
    "text": "library(tidyverse)\nlibrary(skimr)\n\nbeer_mkts &lt;- read_csv('https://bcdanl.github.io/data/beer_markets.csv')\n\n\ntop_markets &lt;- beer_mkts %&gt;%\n  group_by(brand, market) %&gt;%\n  summarize(total_floz = sum(beer_floz)) %&gt;%\n  arrange(brand, desc(total_floz)) %&gt;%\n  group_by(brand) %&gt;%\n  slice(1:5)\ntop_markets\n\n# A tibble: 25 √ó 3\n# Groups:   brand [5]\n   brand       market      total_floz\n   &lt;chr&gt;       &lt;chr&gt;            &lt;dbl&gt;\n 1 BUD LIGHT   PHOENIX         271012\n 2 BUD LIGHT   TAMPA           171830\n 3 BUD LIGHT   MIAMI           152990\n 4 BUD LIGHT   ST. LOUIS       140982\n 5 BUD LIGHT   CHARLOTTE       136786\n 6 BUSCH LIGHT RURAL IOWA      184000\n 7 BUSCH LIGHT HOUSTON         154896\n 8 BUSCH LIGHT CHICAGO         118916\n 9 BUSCH LIGHT TAMPA           110680\n10 BUSCH LIGHT MINNEAPOLIS      92992\n# ‚Ñπ 15 more rows\n\n# This code finds the top 5 markets in terms of total beer_floz for each beer brand\n\n\nloyal_consumers &lt;- beer_mkts %&gt;%\n  group_by(hh, brand) %&gt;%\n  summarize(purchased = n()) %&gt;%\n  group_by(brand) %&gt;%\n  mutate(total_hh = n(),\n         fraction = sum(purchased == 1) / total_hh) %&gt;%\n  arrange(desc(fraction))\nloyal_consumers\n\n# A tibble: 13,202 √ó 5\n# Groups:   brand [5]\n        hh brand       purchased total_hh fraction\n     &lt;dbl&gt; &lt;chr&gt;           &lt;int&gt;    &lt;int&gt;    &lt;dbl&gt;\n 1 2000417 COORS LIGHT         8     3045    0.529\n 2 2000711 COORS LIGHT        13     3045    0.529\n 3 2001521 COORS LIGHT         3     3045    0.529\n 4 2001825 COORS LIGHT         1     3045    0.529\n 5 2001871 COORS LIGHT         1     3045    0.529\n 6 2001947 COORS LIGHT         5     3045    0.529\n 7 2001978 COORS LIGHT         1     3045    0.529\n 8 2002617 COORS LIGHT        24     3045    0.529\n 9 2002856 COORS LIGHT         2     3045    0.529\n10 2003419 COORS LIGHT         2     3045    0.529\n# ‚Ñπ 13,192 more rows\n\n# This code calculates the fraction of households purchasing only each beer brand\n\nlargest_proportion_brand &lt;- loyal_consumers %&gt;%\n  arrange(desc(fraction)) %&gt;%\n  slice(1)\nlargest_proportion_brand\n\n# A tibble: 5 √ó 5\n# Groups:   brand [5]\n       hh brand         purchased total_hh fraction\n    &lt;dbl&gt; &lt;chr&gt;             &lt;int&gt;    &lt;int&gt;    &lt;dbl&gt;\n1 2000235 BUD LIGHT             1     4657    0.499\n2 2001531 BUSCH LIGHT           1     1110    0.457\n3 2000417 COORS LIGHT           8     3045    0.529\n4 2000946 MILLER LITE           1     3195    0.487\n5 2001715 NATURAL LIGHT         1     1195    0.403\n\n# This code finds the brand with the largest proportion of loyal consumers\n\n\nhousehold_stats &lt;- beer_mkts %&gt;%\n  group_by(hh) %&gt;%\n  summarize(num_transactions = n(),\n            proportion_bud_light = mean(brand == \"Bud Light\"),\n            proportion_busch_light = mean(brand == \"Busch Light\"),\n            proportion_coors_light = mean(brand == \"Coors Light\"),\n            proportion_miller_lite = mean(brand == \"Miller Lite\"),\n            proportion_natural_light = mean(brand == \"Natural Light\"))\nhousehold_stats\n\n# A tibble: 10,408 √ó 7\n        hh num_transactions proportion_bud_light proportion_busch_light\n     &lt;dbl&gt;            &lt;int&gt;                &lt;dbl&gt;                  &lt;dbl&gt;\n 1 2000235                1                    0                      0\n 2 2000417                8                    0                      0\n 3 2000711               13                    0                      0\n 4 2000946                2                    0                      0\n 5 2001521               11                    0                      0\n 6 2001531                1                    0                      0\n 7 2001581                5                    0                      0\n 8 2001582               13                    0                      0\n 9 2001618                1                    0                      0\n10 2001715                3                    0                      0\n# ‚Ñπ 10,398 more rows\n# ‚Ñπ 3 more variables: proportion_coors_light &lt;dbl&gt;,\n#   proportion_miller_lite &lt;dbl&gt;, proportion_natural_light &lt;dbl&gt;\n\n# This code calculates the number of beer transactions and proportion of each \n# beer brand choice for each household\n\n\n# Plotting Total Beer Volume by Brand in Top 5 Markets with geom_point\nggplot(top_markets, aes(x = brand, y = total_floz, color = market)) +\n  geom_point(size = 3) +\n  labs(title = \"Total Beer Volume by Brand in Top 5 Markets\",\n       x = \"Beer Brand\",\n       y = \"Total Beer Volume (floz)\",\n       color = \"Market\") +\n  theme_minimal()\n\n\n\n\n\n# Plotting Proportion of Households Purchasing Only Each Beer Brand\nggplot(loyal_consumers, aes(x = brand, y = fraction)) +\n  geom_bar(stat = \"identity\", fill = \"purple\") +\n  labs(title = \"Proportion of Households Purchasing Only Each Beer Brand\",\n       x = \"Beer Brand\",\n       y = \"Proportion of Loyal Consumers\") +\n  theme_ipsum()\n\n\n\n# This ggplot code creates a bar plot that visualizes the proportion of households purchasing only each beer brand. \n# Each bar represents a beer brand, and the height of the bar corresponds to the proportion of loyal consumers for that brand\n\n\n# Bar Chart of Top 10 Brands by Total Ounces Sold\ntop_brands_plot &lt;- top_markets %&gt;%\n  ggplot(aes(x = reorder(brand, -total_floz), y = total_floz, fill = brand)) +\n  geom_bar(stat = \"identity\") +\n  theme_minimal() +\n  labs(title = \"Top 10 Brands by Total Ounces Sold\",\n       x = \"Brand\",\n       y = \"Total Ounces Sold\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nprint(top_brands_plot)"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog :purple_heart: :sunny:",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!"
  },
  {
    "objectID": "posts/nyc restaurants /nycHW.html",
    "href": "posts/nyc restaurants /nycHW.html",
    "title": "NYC Restaurants",
    "section": "",
    "text": "library(tidyverse)\nlibrary(skimr)\nrestaurant &lt;- read_csv(\n  'https://bcdanl.github.io/data/DOHMH_NYC_Restaurant_Inspection.csv'\n)\n\n\nsummary_stats &lt;- restaurant %&gt;%\n  group_by(GRADE) %&gt;%\n  summarize(\n    Mean = mean(SCORE),\n    StdDev = sd(SCORE),\n    Q1 = quantile(SCORE, 0.25),\n    Median = median(SCORE),\n    Q3 = quantile(SCORE, 0.75),\n    Max = max(SCORE)\n  )\n\nprint(summary_stats)\n\n# A tibble: 3 √ó 7\n  GRADE  Mean StdDev    Q1 Median    Q3   Max\n  &lt;chr&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 A      9.26   3.42     7     10    12    13\n2 B     21.0    4.16    18     21    24    36\n3 C     38.6   10.8     31     36    44    86\n\n# The code calculates the mean, standard deviation, quartiles, and maximum \n# of SCORE for each GRADE of restaurants.\n\n\ngrade_a_count &lt;- nrow(restaurant[restaurant$GRADE == \"A\", ])\n\ntotal_restaurants &lt;- nrow(restaurant)\n\ngrade_c_percentage &lt;- (nrow(restaurant[restaurant$GRADE == \"C\", ]) / total_restaurants) * 100\n\ncat(\"Number of restaurants with GRADE A:\", grade_a_count, \"\\n\")\n\nNumber of restaurants with GRADE A: 16305 \n\ncat(\"Percentage of restaurants with GRADE C:\", grade_c_percentage, \"%\")\n\nPercentage of restaurants with GRADE C: 1.667328 %\n\n# It counts the number of restaurants with GRADE A and calculates the \n# percentage of restaurants with GRADE C. Number of restaurants with \n# GRADE A is 16305 and the percentage of restaurants with \n# GRADE C is 1.667328 %\n\n\nlibrary(ggplot2)\nggplot(restaurant, aes(x = GRADE, y = SCORE, fill = `CRITICAL FLAG`)) +\n  geom_boxplot() +\n  labs(title = \"Distribution of SCORE by GRADE and CRITICAL FLAG\")\n\n\n\n# The code creates a box plot to show how the distribution of SCORE varies \n# by GRADE and CRITICAL FLAG. The box plot shows that GRADE C has the\n# highest score and a wider spread of CRITICAL FLAG, whereas GRADE A has\n# the lowest score and a smaller spread of CRITICAL FLAG.\n\n\nggplot(restaurant, aes(x = BORO, fill = `CRITICAL FLAG`)) +\n  geom_bar(position = \"fill\") +\n  facet_wrap(~GRADE) +\n  labs(title = \"Proportion of CRITICAL FLAG by GRADE and BORO\")\n\n\n\n# The code creates a bar plot to display how the proportion of CRITICAL FLAG \n# varies by GRADE and BORO. The bar plot shows that the BORO's classified as \n# GRADE A have the lowest critical count, whereas GRADE B and C have a higher\n# critical count. The Bronx has the most critical count in GRADE C, while \n# Staten Island has the least critical count in GRADE A.\n\n\ntop_cuisines &lt;- restaurant %&gt;%\n  count(`CUISINE DESCRIPTION`) %&gt;%\n  arrange(desc(n)) %&gt;%\n  head(10) %&gt;%\n  pull(`CUISINE DESCRIPTION`)\n\ntop_cuisine_grade_a &lt;- restaurant %&gt;%\n  filter(`CUISINE DESCRIPTION` %in% top_cuisines) %&gt;%\n  group_by(`CUISINE DESCRIPTION`, GRADE) %&gt;%\n  summarise(count = n()) %&gt;%\n  filter(GRADE == \"A\") %&gt;%\n  arrange(desc(count)) %&gt;%\n  slice(1)\n\n# The code finds the CUISINE DESCRIPTION with the highest proportion of \n# GRADE A among the 10 most common cuisine descriptions. The highest CUISINE \n# DESCRIPTION that has the highest proportion of GRADE A is American.\n\n\ncommon_dbas &lt;- restaurant %&gt;%\n  group_by(BORO, DBA) %&gt;%\n  summarize(count = n()) %&gt;%\n  arrange(BORO, desc(count)) %&gt;%\n  group_by(BORO) %&gt;%\n  top_n(3)\n\nmost_common_dba &lt;- common_dbas %&gt;%\n  group_by(DBA) %&gt;%\n  summarize(count = sum(count)) %&gt;%\n  arrange(desc(count)) %&gt;%\n  head(1)\n\n# The code finds the three most common restaurant names (DBA) in each \n# borough and identifies the most common DBA value overall in NYC. \n# Overall, the most common DBA value in NYC is starbucks.\n\n\ncritical_dba &lt;- restaurant %&gt;%\n  filter(DBA %in% common_dbas$DBA) %&gt;%\n  group_by(DBA, `CRITICAL FLAG`) %&gt;%\n  summarize(count = n()) %&gt;%\n  filter(`CRITICAL FLAG` == \"Critical\") %&gt;%\n  arrange(desc(count)) %&gt;%\n  head(1)\n\n# This code determines the DBA value most likely to commit critical violations \n# among the common DBA's identified in Q1f. The DBA value that is most likely\n# to commit critical violation is dunkin."
  },
  {
    "objectID": "lecture11:29.html",
    "href": "lecture11:29.html",
    "title": "Habits",
    "section": "",
    "text": "Section 1\n\nsome bullet\n\nQuarto\nggplot\n\n\n\n\n\n\nggplot(gapminder) +\n  geom_point(aes(x = gdpPercap, y = lifeExp,\n                 color = continent), alpha = .25) +\n  labs(x = \"GDP per capita\",\n       y = \"Life Expectancy\",\n       color = \"Continent\") +\n  theme_economist()\n\n:smile:"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Sophia Rodger",
    "section": "",
    "text": "Sophia Rodger majors in Business Administration at SUNY Geneseo. When not working on data analytics, Sophia enjoys spending time hanging out with friends and family."
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Sophia Rodger",
    "section": "Education",
    "text": "Education\nState University of New York at Geneseo | Geneseo, NY  Major in Finance | Aug 2022 - May 2026  Minor in Business Administration"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Sophia Rodger",
    "section": "Experience",
    "text": "Experience\nFood Truck Manager and Operator | Data Analyst Intern | May 2024 - Aug 2024"
  }
]